# Set working directory as path where file is located
getwd()
if(!require(wbstats)){
install.packages("wbstats")
library(wbstats)}
wb <- wb(country=c("AF","BRA","ITA","NGA","SWE","UGA"),
indicator=c("NY.GDP.PCAP.CD", # GDP per capita (current US$)
"SP.POP.TOTL", # Population, total
"SE.SEC.ENRR", #  School enrollment, secondary (% gross)
"SH.DYN.MORT"), # Mortality rate, under-5 (per 1,000 live births)
startdate = 2000, enddate = 2020)
View(wb)
wb_re <- reshape(wb[, c("country","iso3c","date","indicatorID","value")], # df
timevar = "indicatorID",
idvar = c("country","date","iso3c"),
direction = "wide")
View(wb_re)
# Load Quality of Government data
qog <- read_csv("https://www.qogdata.pol.gu.se/data/qog_bas_ts_jan23.csv")
qog <- read_csv("https://www.qogdata.pol.gu.se/data/qog_bas_ts_jan23.csv")
if(!require(readr)){
install.packages("readr")
library(readr)}
# Load Quality of Government data
qog <- read_csv("https://www.qogdata.pol.gu.se/data/qog_bas_ts_jan23.csv")
# Merge
df <- merge(wb_re, # Left df
qog[, c("ccodealp","year","bmr_dem")], # Right df
by.x=c("date","iso3c"), # merge variables in left
by.y=c("year","ccodealp"), # merge variables in right
all.x=TRUE, # merge operation, only keep left
sort=FALSE) # Do not sort observations
# Rename columns
names(df)
names(df)[4] <- "gdp_per_cap"
names(df)[5] <- "pop_size"
names(df)[6] <- "sec_enrol"
names(df)[7] <- "mort"
names(df)[8] <- "democracy"
View(df)
temp <- tempfile(fileext = ".zip")
download.file("https://ucdp.uu.se/downloads/ged/ged231-csv.zip", temp, mode="wb")
ucdp <- read_csv(temp) # Read data
View(ucdp)
ucdp <- read_csv("https://ucdp.uu.se/downloads/ged/ged231-csv.zip")
downloads
ucdp <- read_csv("https://ucdp.uu.se/downloads/index.html#ged_global")
View(ucdp)
temp <- tempfile(fileext = ".zip") # Initiate temporary file
# Download zip as temporary file
download.file("https://ucdp.uu.se/downloads/ged/ged231-csv.zip", temp, mode="wb")
ucdp <- read_csv(temp) # Read data
View(ucdp)
if(!require(haven)){
install.packages("haven")
library(haven)}
afro <- read_sav("https://www.afrobarometer.org/wp-content/uploads/2023/06/SRL_R9.data_.final_.wtd_release.14Feb23.sav")
# Look at data
View(afro)
afro$Q1
ucdp_agg <- aggregate(ucdp$best, # Variable to aggregate
list(ucdp$country, ucdp$year), # Group variables
FUN=sum) # How to aggregate, sum
View(ucdp_agg)
# Merge
df <- merge(df, # Left df
ucdp_agg, # Right df
by.x=c("date","country"), # merge variables in left
by.y=c("Group.2","Group.1"), # merge variables in right
all.x=TRUE, # merge operation, only keep left
sort=FALSE) # Do not sort observations
# Rename column
names(df)[9] <- "best"
View(df)
# Why do we see missing values?
# Missing values mean that country-year was not in UCDP data,
# so there were no fatalities.
# We can replace with 0s.
df$best[is.na(df$best)] = 0
View(df)
# Rename column
names(df)[9] <- "best"
View(df)
# What is the level of analysis?
View(ucdp)
View(ucdp_agg)
df <- merge(df, # Left df
ucdp_agg, # Right df
by.x=c("date","country"), # merge variables in left
by.y=c("Group.2","Group.1"), # merge variables in right
all.x=TRUE, # merge operation, only keep left
sort=FALSE)
View(df)
# Rename column
names(df)[9] <- "best"
View(df)
is.na(df$best) # Check if value is na
df_uni <- distinct(df_uni, country) # Get unique values
# Save df
write.csv(df, "df_income_mortality_best.csv")
df <- read_csv("df_income_mortality_best.csv")
View(df)
# Get unique countries in df
df_uni <- select(df, country) # Select variable
df_uni <- distinct(df_uni, country) # Get unique values
df_uni
df_uni <- select(df, country)
if(!require(dplyr)){
install.packages("dplyr")
library(dplyr)}
# Get unique countries in df
df_uni <- select(df, country) # Select variable
df_uni <- distinct(df_uni, country) # Get unique values
df_uni
if(!require(tidyverse)){
install.packages("tidyverse")
library(tidyverse)}
df_s <- filter(df, country %in% c("Afghanistan","Italy"))
df_s
df_grouped <- group_by(df, date)
df_grouped
View(df_grouped)
df_mean_inc <- summarize(df_grouped,
n=n(), # Counts
mean_inc=mean(gdp_per_cap), # Mean
max_mort=max(mort)) # Max
df_mean_inc
df_mean_inc
sum(is.na(df$gdp_per_cap))
sum(is.na(df$mort))
# Option III: Replace missing values with group mean(best estimator)
df_na <- group_by(df_na, country) # Group
df_na
# Option III: Replace missing values with group mean(best estimator)
df_na <- group_by(df_na, country) # Group
# Option II: Replace missing values with mean(may cause non-resonable outlier)
df_na <- df # Copy
# Option III: Replace missing values with group mean(best estimator)
df_na <- group_by(df_na, country) # Group
df_na
df_na <- mutate(df_na, # Replace with mean if value is missing
sec_enrol = ifelse(is.na(sec_enrol),
mean(sec_enrol, na.rm = TRUE),
sec_enrol))
# Re-coding variables, in Base R
# Create categorical income variable
df_na$income_cat <- 0 # Create empty variable
summary(df_na$gdp_per_cap) # Check quantile
summary(df_na$gdp_per_cap)[2]
df_na$income_cat[df_na$gdp_per_cap>summary(df_na$gdp_per_cap)[2]] <- 1 # Replace step by step
df_na$income_cat[df_na$gdp_per_cap>summary(df_na$gdp_per_cap)[3]] <- 2
df_na$income_cat[df_na$gdp_per_cap>summary(df_na$gdp_per_cap)[5]] <- 3
# Convert into factor
typeof(df_na$income_cat)
df_na$income_cat <- factor(df_na$income_cat,
labels = c("low","medium_low","medium_high","high"))
typeof(df_na$income_cat)
is.factor(df_na$income_cat)
levels(df_na$income_cat)
# Re-coding variables, in tidyverse
# Create categorical income variable
quantile(df_na$gdp_per_cap) # Check quantiles
# Re-coding variables, in tidyverse
# Create categorical income variable
quantile(df_na$gdp_per_cap) # Check quantiles
# Re-coding variables, in tidyverse
# Create categorical income variable
df_na$gdp_per_cap
?quantile
