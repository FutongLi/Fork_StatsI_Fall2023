setwd("/Users/poisson/Documents/GitHub/Fork_Statsl Fall2023")
getwd()
rm(list=ls())
library(tidyverse)
bribe_data <- matrix(c(14, 6, 7, 7, 7, 1), nrow = 2, ncol = 3, byrow = TRUE)
rownames(bribe_data) <- c("Upper class", "Lower class")
colnames(bribe_data) <- c("Not stopped", "Bribe requested", "Stopped")
bribe_data
r <- apply(bribe_data, 1, sum)
c <- apply(bribe_data, 2, sum)
r
c
fe_all <- numeric()
chisq <- 0
fe <- 0
for (i in seq(1:nrow(bribe_data))) {
for (j in seq(1:ncol(bribe_data))) {
fe <- (c[j] * r[i]) / sum(bribe_data)
chisq <- chisq + ((bribe_data[i, j] - fe) ^ 2 / fe)
fe_all <- c(fe_all, fe)
}}
fe_all <- matrix(fe_all, nrow = 2, ncol = 3, byrow = TRUE)
print(fe_all)
print(chisq)
# check chi-squre value
chisq.test(bribe_data)
x_sq <- chisq.test(bribe_data)
chisq == x_sq$statistic
p_value = pchisq(chisq, df = (nrow(bribe_data)-1) * (ncol(bribe_data)-1), lower.tail=FALSE)
p_value
p_value <= 0.1
z <- 0
z_all <- numeric()
for (i in seq(1:nrow(bribe_data))) {
for (j in seq(1:ncol(bribe_data))) {
z = (bribe_data[i,j] - fe_all[i, j]) /
(sqrt
(fe_all[i,j] * (1- (r[i] / sum(bribe_data)))
* ( 1- (c[j] / sum(bribe_data)))))
z_all <- c(z_all, z)
}}
z_all <- matrix(z_all, nrow = 2, ncol = 3, byrow = TRUE)
print(z_all)
# check standardized residuals
x_sq$stdres
x_sq
ls(x_sq)
chisq.test(bribe_data)$stdres
chisq.test(bribe_data)$stdres
?chisq.test
#Question1
#a
# Define the observed data
observed <- matrix(c(14, 6, 7, 7, 7, 1), nrow = 2, ncol = 3,byrow = TRUE)
rownames(observed) <- c("Upper Class", "Lower Class")
colnames(observed) <- c("Not Stopped", "Bribe requesed","Stopped/given warnning")
observed
# Calculate the expected frequencies
row_sums <- rowSums(observed)
col_sums <- colSums(observed)
total_sum <- sum(observed)
for (i in 1:2) {
for (j in 1:3) {
expected[i, j] <- (row_sums[i] * col_sums[j]) / total_sum
}
}
#Question1
#a
# Define the observed data
observed <- matrix(c(14, 6, 7, 7, 7, 1), nrow = 2, ncol = 3,byrow = TRUE)
rownames(observed) <- c("Upper Class", "Lower Class")
colnames(observed) <- c("Not Stopped", "Bribe requesed","Stopped/given warnning")
observed
# Calculate the expected frequencies
row_sums <- rowSums(observed)
col_sums <- colSums(observed)
total_sum <- sum(observed)
expected <- 0
for (i in 1:2) {
for (j in 1:3) {
expected[i, j] <- (row_sums[i] * col_sums[j]) / total_sum
}
}
expected <- 0
for (i in 1:2) {
for (j in 1:3) {
expected <- (row_sums[i] * col_sums[j]) / total_sum
expected <- c(expected, expected)
}
}
expected
row_sums <- rowSums(observed)
col_sums <- colSums(observed)
total_sum <- sum(observed)
expected <- 0
for (i in 1:2) {
for (j in 1:3) {
expected <- (row_sums[i] * col_sums[j]) / total_sum
expected <- c(expected, expected)
}
}
expected
expected <- 0
for (i in 1:2) {
for (j in 1:3) {
expected <- (row_sums[i] * col_sums[j]) / total_sum
expected_all <- c(expected_all, expected)
}
}
row_sums <- rowSums(observed)
col_sums <- colSums(observed)
total_sum <- sum(observed)
expected <- 0
expected_all <- numeric()
for (i in 1:2) {
for (j in 1:3) {
expected <- (row_sums[i] * col_sums[j]) / total_sum
expected_all <- c(expected_all, expected)
}
}
expected_all
chi_squared <- sum(((observed - expected)^2) / expected)
chi_squared
#b
df <- (nrow(observed) - 1) * (ncol(observed) - 1)
p_value <- pchisq(chi_squared,df,lower.tail = FALSE)
p_value
if(p_value<0.1){
cat("under the significance level a=0.1,we can reject null hypothsis,the officer were more likely to solicit a bribe from drivers depending on their class.\n")
}else{
cat("under the significance level a=0.1,we fail to reject null hypothsis,the officer were less likely to solicit a bribe from drivers depending on their class.\n")
}
#c
residuals <- matrix(0, nrow = 2, ncol = 3)
for (i in 1:2) {
for (j in 1:3) {
residuals[i, j] <- (observed[i, j] - expected[i, j]) / (sqrt(expected[i, j]* (1 - (row_sums[i]/total_sum)) * (1 - (col_sums[j]/total_sum))))
}
}
#c
res_all <- numeric()
for (i in 1:2) {
for (j in 1:3) {
residuals <- (observed[i, j] - expected[i, j]) / (sqrt(expected[i, j]* (1 - (row_sums[i]/total_sum)) * (1 - (col_sums[j]/total_sum))))
res_all <- c(res_all, residuals)
}
}
#Question1
#a
# Define the observed data
observed <- matrix(c(14, 6, 7, 7, 7, 1), nrow = 2, ncol = 3,byrow = TRUE)
rownames(observed) <- c("Upper Class", "Lower Class")
colnames(observed) <- c("Not Stopped", "Bribe requesed","Stopped/given warnning")
observed
# Calculate the expected frequencies
row_sums <- rowSums(observed)
col_sums <- colSums(observed)
total_sum <- sum(observed)
expected <- 0
expected_all <- numeric()
for (i in 1:2) {
for (j in 1:3) {
expected <- (row_sums[i] * col_sums[j]) / total_sum
expected_all <- c(expected_all, expected)
}
}
expected_all
# Run Chi square test
chi_squared <- sum(((observed - expected)^2) / expected)
chi_squared
#b
df <- (nrow(observed) - 1) * (ncol(observed) - 1)
p_value <- pchisq(chi_squared,df,lower.tail = FALSE)
p_value
if(p_value<0.1){
cat("under the significance level a=0.1,we can reject null hypothsis,the officer were more likely to solicit a bribe from drivers depending on their class.\n")
}else{
cat("under the significance level a=0.1,we fail to reject null hypothsis,the officer were less likely to solicit a bribe from drivers depending on their class.\n")
}
#c
res_all <- numeric()
for (i in 1:2) {
for (j in 1:3) {
residuals <- (observed[i, j] - expected_all[i, j]) / (sqrt(expected[i, j]* (1 - (row_sums[i]/total_sum)) * (1 - (col_sums[j]/total_sum))))
res_all <- c(res_all, residuals)
}
}
expected_all
expected_all <- matrix(expected_all, nrow=2, ncol=3, byrow=TRUE)
expected_all
res_all <- numeric()
for (i in 1:2) {
for (j in 1:3) {
residuals <- (observed[i, j] - expected_all[i, j]) / (sqrt(expected[i, j]* (1 - (row_sums[i]/total_sum)) * (1 - (col_sums[j]/total_sum))))
res_all <- c(res_all, residuals)
}
}
#c
res_all <- numeric()
for (i in 1:2) {
for (j in 1:3) {
residuals <- (observed[i, j] - expected_all[i, j]) / (sqrt(expected_all[i, j]* (1 - (row_sums[i]/total_sum)) * (1 - (col_sums[j]/total_sum))))
res_all <- c(res_all, residuals)
}
}
residuals <- matrix(0, nrow = 2, ncol = 3)
residuals
observed
expected_all
residuals
for (i in 1:2) {
for (j in 1:3) {
residuals <- (observed[i, j] - expected_all[i, j]) /
(sqrt(expected_all[i, j]* (1 - (row_sums[i]/total_sum)) * (1 - (col_sums[j]/total_sum))))
res_all <- c(res_all, residuals)
}
}
residuals <- matrix(0, nrow = 2, ncol = 3)
residuals
res_all <- numeric()
for (i in 1:2) {
for (j in 1:3) {
residuals <- (observed[i, j] - expected_all[i, j]) /
(sqrt(expected_all[i, j]* (1 - (row_sums[i]/total_sum)) * (1 - (col_sums[j]/total_sum))))
res_all <- c(res_all, residuals)
}
}
residuals <- matrix(res_all, nrow = 2, ncol = 3)
residuals
#c
res_all <- numeric()
for (i in 1:2) {
for (j in 1:3) {
residuals <- (observed[i, j] - expected_all[i, j]) /
(sqrt(expected_all[i, j]* (1 - (row_sums[i]/total_sum)) * (1 - (col_sums[j]/total_sum))))
res_all <- c(res_all, residuals)
}
}
res_all <- numeric()
for (i in 1:2) {
for (j in 1:3) {
residuals <- (observed[i, j] - expected_all[i, j]) /
(sqrt(expected_all[i, j]* (1 - (row_sums[i]/total_sum)) * (1 - (col_sums[j]/total_sum))))
res_all <- c(res_all, residuals)
}
}
res_all <- matrix(res_all, nrow = 2, ncol = 3)
res_all
total_sum <- sum(observed)
total_sum
#Question1
#a
# Define the observed data
observed <- matrix(c(14, 6, 7, 7, 7, 1), nrow = 2, ncol = 3,byrow = TRUE)
rownames(observed) <- c("Upper Class", "Lower Class")
colnames(observed) <- c("Not Stopped", "Bribe requesed","Stopped/given warnning")
observed
# Calculate the expected frequencies
row_sums <- rowSums(observed)
col_sums <- colSums(observed)
total_sum <- sum(observed)
total_sum
expected <- 0
expected_all <- numeric()
for (i in 1:2) {
for (j in 1:3) {
expected <- (row_sums[i] * col_sums[j]) / total_sum
expected_all <- c(expected_all, expected)
}
}
expected_all <- matrix(expected_all, nrow=2, ncol=3, byrow=TRUE)
expected_all
# Run Chi square test
chi_squared <- sum(((observed - expected)^2) / expected)
chi_squared
#b
df <- (nrow(observed) - 1) * (ncol(observed) - 1)
p_value <- pchisq(chi_squared,df,lower.tail = FALSE)
p_value
if(p_value<0.1){
cat("under the significance level a=0.1,we can reject null hypothsis,the officer were more likely to solicit a bribe from drivers depending on their class.\n")
}else{
cat("under the significance level a=0.1,we fail to reject null hypothsis,the officer were less likely to solicit a bribe from drivers depending on their class.\n")
}
#c
res_all <- numeric()
for (i in 1:2) {
for (j in 1:3) {
residuals <- (observed[i, j] - expected_all[i, j]) /
(sqrt(expected_all[i, j]* (1 - (row_sums[i]/total_sum)) * (1 - (col_sums[j]/total_sum))))
res_all <- c(res_all, residuals)
}
}
res_all <- matrix(res_all, nrow = 2, ncol = 3)
res_all
chisq.test(observed)
chisq.test(observed)$stdres
res_all <- matrix(res_all, nrow = 2, ncol = 3ï¼Œbyrow=TRUE)
#Question1
#a
# Define the observed data
observed <- matrix(c(14, 6, 7, 7, 7, 1), nrow = 2, ncol = 3,byrow = TRUE)
rownames(observed) <- c("Upper Class", "Lower Class")
colnames(observed) <- c("Not Stopped", "Bribe requesed","Stopped/given warnning")
observed
chisq.test(observed)$stdres
# Calculate the expected frequencies
row_sums <- rowSums(observed)
col_sums <- colSums(observed)
total_sum <- sum(observed)
total_sum
expected <- 0
expected_all <- numeric()
for (i in 1:2) {
for (j in 1:3) {
expected <- (row_sums[i] * col_sums[j]) / total_sum
expected_all <- c(expected_all, expected)
}
}
expected_all <- matrix(expected_all, nrow=2, ncol=3, byrow=TRUE)
expected_all
# Run Chi square test
chi_squared <- sum(((observed - expected)^2) / expected)
chi_squared
#b
df <- (nrow(observed) - 1) * (ncol(observed) - 1)
p_value <- pchisq(chi_squared,df,lower.tail = FALSE)
p_value
if(p_value<0.1){
cat("under the significance level a=0.1,we can reject null hypothsis,the officer were more likely to solicit a bribe from drivers depending on their class.\n")
}else{
cat("under the significance level a=0.1,we fail to reject null hypothsis,the officer were less likely to solicit a bribe from drivers depending on their class.\n")
}
#c
res_all <- numeric()
for (i in 1:2) {
for (j in 1:3) {
residuals <- (observed[i, j] - expected_all[i, j]) /
(sqrt(expected_all[i, j]* (1 - (row_sums[i]/total_sum)) * (1 - (col_sums[j]/total_sum))))
res_all <- c(res_all, residuals)
}
}
res_all <- matrix(res_all, nrow = 2, ncol = 3ï¼Œbyrow=TRUE)
res_all <- matrix(res_all, nrow = 2, ncol = 3ï¼Œbyrow = TRUE)
res_all
res_all <- matrix(res_all, nrow = 2, ncol = 3ï¼Œbyrow = TRUE)
res_all <- matrix(res_all, nrow = 2, ncol = 3, byrow = TRUE)
res_all
###########################
# Problem Set 2
# Name: Futong Li
# Student Id: 23341767
###########################
setwd("/Users/poisson/Documents/GitHub/Fork_Statsl Fall2023")
getwd()
rm(list=ls())
library(tidyverse)
# Question 1: Political Science
# (a) Calculate the  \texttt(Ï‡^2 )test statistic by hand/manually
bribe_data <- matrix(c(14, 6, 7, 7, 7, 1), nrow = 2, ncol = 3, byrow = TRUE)
rownames(bribe_data) <- c("Upper class", "Lower class")
colnames(bribe_data) <- c("Not stopped", "Bribe requested", "Stopped")
bribe_data
r <- apply(bribe_data, 1, sum)
c <- apply(bribe_data, 2, sum)
r
c
fe_all <- numeric()
chisq <- 0
fe <- 0
for (i in seq(1:nrow(bribe_data))) {
for (j in seq(1:ncol(bribe_data))) {
fe <- (c[j] * r[i]) / sum(bribe_data)
chisq <- chisq + ((bribe_data[i, j] - fe) ^ 2 / fe)
fe_all <- c(fe_all, fe)
}}
fe_all <- matrix(fe_all, nrow = 2, ncol = 3, byrow = TRUE)
print(fe_all)
print(chisq)
# check chi-squre value
chisq.test(bribe_data)
x_sq <- chisq.test(bribe_data)
chisq == x_sq$statistic
# (b) Now calculate the p-value from the test statistic you just created
p_value = pchisq(chisq, df = (nrow(bribe_data)-1) * (ncol(bribe_data)-1), lower.tail=FALSE)
p_value
p_value <= 0.1
# (c) Calculate the standardized residuals for each cell a
z <- 0
z_all <- numeric()
for (i in seq(1:nrow(bribe_data))) {
for (j in seq(1:ncol(bribe_data))) {
z = (bribe_data[i,j] - fe_all[i, j]) /
(sqrt
(fe_all[i,j] * (1- (r[i] / sum(bribe_data)))
* ( 1- (c[j] / sum(bribe_data)))))
z_all <- c(z_all, z)
}}
z_all <- matrix(z_all, nrow = 2, ncol = 3, byrow = TRUE)
print(z_all)
# check standardized residuals
x_sq$stdres
ls(x_sq)
chisq.test(bribe_data[])$stdres
?chisq.test
## Question 2: Economics
## (b) Run a bivariate regression to test this hypothesis
## Read data
df <- read.csv("https://raw.githubusercontent.com/kosukeimai/qss/master/PREDICTION/women.csv")
head(df)
View(df)
reserved <- factor(df$reserved)
## Scatter plot
scatter <- ggplot(data = df,
mapping = aes(x = reserved, y = water)) +
geom_point()
scatter
## Fit model
model <- lm(water~reserved, data = df)
summary(model)
